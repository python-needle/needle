Needle: Automated tests for your CSS
====================================

Needle is a tool for testing your CSS with `Selenium <http://seleniumhq.org/>`_
and `nose <http://somethingaboutorange.com/mrl/projects/nose/>`_.

It checks that CSS renders correctly by taking screenshots of portions of
a website and comparing them against known good screenshots. It also provides
tools for testing calculated CSS values and the position of HTML elements.

Installation
------------

If you haven't got `pip <http://www.pip-installer.org/>`_ installed::

    $ sudo easy_install pip

As root, or in a `virtualenv <http://www.virtualenv.org/>`_::

    $ pip install needle

Download `selenium-server-standalone-2.8.0.jar <http://selenium.googlecode.com/files/selenium-server-standalone-2.8.0.jar>`_. By default, Selenium requires `Firefox 4 <http://getfirefox.com>`_.


Getting started
---------------

Run the Selenium server::

    $ java -jar selenium-server-standalone-2.8.0.jar

Create ``test_bbc.py`` in an empty directory::

    from needle.cases import NeedleTestCase

    class BBCNewsTest(NeedleTestCase):
        def test_masthead(self):
            self.driver.get('http://www.bbc.co.uk/news/')
            self.assertScreenshot('#blq-mast', 'bbc-masthead')

This is a test case which tells the Selenium server to open BBC News and check
the bar across the top of the page looks correct.
:py:meth:`~needle.cases.NeedleTestCase.assertScreenshot` take two arguments: a
CSS selector for the element we are capturing and a filename for the image.

To create an initial screenshot of the logo, we need to run Needle in
'baseline saving' mode::

    $ nosetests test_bbc.py --with-save-baseline

This will create ``screenshots/baseline/bbc-masthead.png``. Open it up and
check it looks okay.

Now if we run our tests, it will take the same screenshot and check it against
the screenshot on disk::

    $ nosetests test_bbc.py

If a regression in your CSS causes them to become significantly different, the
test will fail.


Advanced example
----------------

Needle adds :doc:`a few useful methods <api/driver>` to
Selenium's WebElement object. For example, we can check computed CSS values::

    from needle.cases import NeedleTestCase

    class GoogleTest(NeedleTestCase):
        def test_footer(self):
            self.driver.get('http://www.google.com')
            e = self.driver.find_element_by_id('fctr')
            self.assertScreenshot(e, 'google-footer')
            self.assertEqual(e.get_computed_property('font-size'), '13px')



API
---

.. toctree::
    :maxdepth: 2

    api/cases
    api/driver



Indices and tables
------------------

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`

